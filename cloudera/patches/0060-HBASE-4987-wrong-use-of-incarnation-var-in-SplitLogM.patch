From c72e743840ea041f6601e41e7315080ccfd1b757 Mon Sep 17 00:00:00 2001
From: Michael Stack <stack@apache.org>
Date: Fri, 9 Dec 2011 06:16:03 +0000
Subject: [PATCH 060/101] HBASE-4987 wrong use of incarnation var in SplitLogManager

Reason: Bug
Author: Prakash Khemani
Ref: CDH-3901
---
 .../hadoop/hbase/master/SplitLogManager.java       |   57 ++++++++++++-------
 1 files changed, 36 insertions(+), 21 deletions(-)

diff --git a/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java b/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java
index 9c17f2f..da9ece6 100644
--- a/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java
+++ b/src/main/java/org/apache/hadoop/hbase/master/SplitLogManager.java
@@ -333,22 +333,24 @@ public class SplitLogManager extends ZooKeeperListener {
         LOG.debug("unacquired orphan task is done " + path);
       }
     } else {
-      // if in stopTrackingTasks() we were to make tasks orphan instead of
-      // forgetting about them then we will have to handle the race when
-      // accessing task.batch here.
-      if (!task.isOrphan()) {
-        synchronized (task.batch) {
-          if (status == SUCCESS) {
-            task.batch.done++;
-          } else {
-            task.batch.error++;
-          }
-          if ((task.batch.done + task.batch.error) == task.batch.installed) {
-            task.batch.notify();
+      synchronized (task) {
+        task.deleted = true;
+        // if in stopTrackingTasks() we were to make tasks orphan instead of
+        // forgetting about them then we will have to handle the race when
+        // accessing task.batch here.
+        if (!task.isOrphan()) {
+          synchronized (task.batch) {
+            if (status == SUCCESS) {
+              task.batch.done++;
+            } else {
+              task.batch.error++;
+            }
+            if ((task.batch.done + task.batch.error) == task.batch.installed) {
+              task.batch.notify();
+            }
           }
         }
       }
-      task.deleted = true;
     }
     // delete the task node in zk. Keep trying indefinitely - its an async
     // call and no one is blocked waiting for this node to be deleted. All
@@ -591,12 +593,27 @@ public class SplitLogManager extends ZooKeeperListener {
    */
   private Task createTaskIfAbsent(String path, TaskBatch batch) {
     Task oldtask;
+    // batch.installed is only changed via this function and
+    // a single thread touches batch.installed.
     oldtask = tasks.putIfAbsent(path, new Task(batch));
-    if (oldtask != null && oldtask.isOrphan()) {
-        LOG.info("Previously orphan task " + path +
-            " is now being waited upon");
-        oldtask.setBatch(batch);
-        return (null);
+    if (oldtask != null) {
+      synchronized (oldtask) {
+        // new task was not used.
+        batch.installed--;
+        if (oldtask.isOrphan()) {
+          if (oldtask.deleted) {
+            // The task is already done. Do not install the batch for this
+            // task because it might be too late for setDone() to update
+            // batch.done. There is no need for the batch creator to wait for
+            // this task to complete.
+            return (null);
+          }
+          LOG.info("Previously orphan task " + path +
+              " is now being waited upon");
+          oldtask.setBatch(batch);
+          return (null);
+        }
+      }
     }
     return oldtask;
   }
@@ -739,9 +756,7 @@ public class SplitLogManager extends ZooKeeperListener {
       }
       this.batch = batch;
       if (batch != null) {
-        if (this.incarnation == 0) {
-          batch.installed++;
-        }
+        batch.installed++;
       }
     }
 
-- 
1.7.0.4

