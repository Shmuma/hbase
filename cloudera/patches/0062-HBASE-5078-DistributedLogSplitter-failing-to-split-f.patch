From 39e3131901513e1febe48112290dc4e9eedaea85 Mon Sep 17 00:00:00 2001
From: Jimmy Xiang <jxiang@cloudera.com>
Date: Wed, 21 Mar 2012 14:28:42 -0700
Subject: [PATCH 062/101] HBASE-5078 DistributedLogSplitter failing to split file because it has edits for lots of regions

Reason: Bug
Author: Michael Stack
Ref: CDH-4008
---
 .../hbase/regionserver/wal/HLogSplitter.java       |   40 ++++++++++++++------
 1 files changed, 28 insertions(+), 12 deletions(-)

diff --git a/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java b/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
index 24efec0..9ca2cc8 100644
--- a/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
+++ b/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
@@ -355,10 +355,12 @@ public class HLogSplitter {
     boolean skipErrors = conf.getBoolean("hbase.hlog.split.skip.errors",
         HLog.SPLIT_SKIP_ERRORS_DEFAULT);
     int interval = conf.getInt("hbase.splitlog.report.interval.loglines", 1024);
-    // How often to send a progress report (default 1/2 master timeout)
+    // How often to send a progress report (default 1/2 the zookeeper session
+    // timeout of if that not set, the split log DEFAULT_TIMEOUT)
     int period = conf.getInt("hbase.splitlog.report.period",
-        conf.getInt("hbase.splitlog.manager.timeout",
-            ZKSplitLog.DEFAULT_TIMEOUT) / 2);
+      conf.getInt("hbase.splitlog.manager.timeout", ZKSplitLog.DEFAULT_TIMEOUT) / 2);
+    int numOpenedFilesBeforeReporting =
+      conf.getInt("hbase.splitlog.report.openedfiles", 3);
     Path logPath = logfile.getPath();
     long logLength = logfile.getLen();
     LOG.info("Splitting hlog: " + logPath + ", length=" + logLength);
@@ -379,7 +381,10 @@ public class HLogSplitter {
     if (reporter != null && reporter.progress() == false) {
       return false;
     }
+    // Report progress every so many edits and/or files opened (opening a file
+    // takes a bit of time).
     int editsCount = 0;
+    int numNewlyOpenedFiles = 0;
     Entry entry;
     try {
       while ((entry = getNextLogLine(in,logPath, skipErrors)) != null) {
@@ -391,22 +396,31 @@ public class HLogSplitter {
         WriterAndPath wap = (WriterAndPath)o;
         if (wap == null) {
           wap = createWAP(region, entry, rootDir, tmpname, fs, conf);
+          numNewlyOpenedFiles++;
           if (wap == null) {
-        	  // ignore edits from this region. It doesn't ezist anymore.
-        	  // It was probably already split.
-        	  logWriters.put(region, BAD_WRITER);
-        	  continue;
+            // ignore edits from this region. It doesn't exist anymore.
+            // It was probably already split.
+            logWriters.put(region, BAD_WRITER);
+            continue;
           } else {
             logWriters.put(region, wap);
           }
         }
         wap.w.append(entry);
         editsCount++;
-        if (editsCount % interval == 0) {
+        // If sufficient edits have passed OR we've opened a few files, check if
+        // we should report progress.
+        if (editsCount % interval == 0 ||
+            (numNewlyOpenedFiles > numOpenedFilesBeforeReporting)) {
+          // Zero out files counter each time we fall in here.
+          numNewlyOpenedFiles = 0;
+          String countsStr = "edits=" + editsCount + ", files=" + logWriters.size();
+          status.setStatus("Split " + countsStr);
           long t1 = EnvironmentEdgeManager.currentTimeMillis();
           if ((t1 - last_report_at) > period) {
             last_report_at = t;
             if (reporter != null && reporter.progress() == false) {
+              status.markComplete("Failed: reporter.progress asked us to terminate; " + countsStr);
               progress_failed = true;
               return false;
             }
@@ -439,10 +453,12 @@ public class HLogSplitter {
         wap.w.close();
         LOG.debug("Closed " + wap.p);
       }
-      LOG.info("processed " + editsCount + " edits across " + n + " regions" +
-          " threw away edits for " + (logWriters.size() - n) + " regions" +
-          " log file = " + logPath +
-          " is corrupted = " + isCorrupted);
+      String msg = "Processed " + editsCount + " edits across " + n + " regions" +
+        " threw away edits for " + (logWriters.size() - n) + " regions" +
+        "; log file=" + logPath +
+        ", corrupted=" + isCorrupted;
+      LOG.info(msg);
+      status.markComplete(msg);
     }
     return true;
   }
-- 
1.7.0.4

